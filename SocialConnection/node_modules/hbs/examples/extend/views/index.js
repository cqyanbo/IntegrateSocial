define(['handlebars'], function(Handlebars) {
return Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  
  return "\n<link rel=\"stylesheet\" href=\"/css/index.css\"/>\n";
  }

function program3(depth0,data) {
  
  
  return "\n<script>\n  document.write('foo bar!');\n</script>\n";
  }

  buffer += "\n";
  options = {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data};
  stack2 = ((stack1 = helpers.extend || depth0.extend),stack1 ? stack1.call(depth0, "stylesheets", options) : helperMissing.call(depth0, "extend", "stylesheets", options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n\nlet the magic begin\n\n";
  options = {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data};
  stack2 = ((stack1 = helpers.extend || depth0.extend),stack1 ? stack1.call(depth0, "scripts", options) : helperMissing.call(depth0, "extend", "scripts", options));
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\n";
  return buffer;
  })
});